create table Salesman (SalesmanId int,SalesmanName varchar(255),Commision int,City varchar(255) , age int)
insert into Salesman Values (101,'Joe',50,'California',17),
(102,'Simon',75,'Texas',25),
(103,'Jessie',105,'Florida',35),
(104,'Danny',100,'Texas',22),
(105,'Lia',65,'New Jersay',30)
select * from salesman

create table Customer (SalesmanId int,CustomerId int,CustomerName varchar(255),PurchaseAmount int)
insert into Customer values (101,2345,'Andrew',550),
(103,1575,'Lucky',4500),
(103,2345,'Andrew',4000),
(107,3747,'Remona',2700),
(110,4004,'Julia',4545)
select * from Customer

create table Orders (OrderId int,CustomerId int,SalesmanId int,OrderDate date , Amount int)
INSERT INTO Orders Values 
(5001,2345,101,'2021-07-01',550),
(5003,1234,105,'2022-02-15',1500)
select * from Orders

--Q1:Insert a new record in your Orders table
INSERT INTO Orders Values 
(5004,3747,103,'2024-01-31',1000)

--Q2:Add Primary key constraint for SalesmanId column in Salesman table.
--Add default constraint for City column in Salesman table.
--Add Foreign key constraint for SalesmanId column in Customer table.
--Add not null constraint in Customer_name column for the Customer table.
alter table Salesman add  constraint d_345 default 'Pune' for City
alter table Customer alter column CustomerName varchar(255) not null
alter table Salesman alter column SalesmanId int not null
alter table Salesman add constraint p_345 primary key (SalesmanId)
insert into  salesman values (107,'Shikha',65,'New Jersay',25),(110,'Rani',65,'Pune',24)
alter table Customer add constraint f_345 foreign key (SalesmanId) REFERENCES Salesman(SalesmanId)

--Q3 : Fetch the data where the Customer’s name is ending with either ‘N’ also get the purchase amount value greater than 500.
select * from Customer where CustomerName like '%N' or PurchaseAmount > 500
--Q4 : Using SET operators, retrieve the first result with unique Salesman Idvalues from two tables, and the other result containing SalesmanId without duplicates from two tables.
select salesmanid from salesman except select salesmanid from customer

select salesmanid from salesman except select salesmanid from orders

select salesmanid from salesman union select salesmanid from customer

select salesmanid from salesman union select salesmanid from orders

--Q5:Display the below columns which has the matching data. Orderdate,SalesmanName,CustomerName,Commission,and City which has the range of Purchase Amount between 1500to3000
select orders.OrderDate,
salesman.SalesmanName,
Customer.CustomerName,
Salesman.Commision,
Salesman.City
from Salesman
inner join orders on orders.SalesmanId = Salesman.SalesmanId
inner join Customer on Customer.SalesmanId = Salesman.SalesmanId
where Customer.PurchaseAmount >= 1500 and Customer.PurchaseAmount <= 3000



--Q6 : Using right join fetch all the results from Salesman and Orders table.
select salesman.SalesmanId,
salesman.SalesmanName,
salesman.Commision,
salesman.City,
Salesman.age,
orders.OrderId,
orders.CustomerId,
orders.OrderDate,
orders.Amount
from Salesman
right join Orders on Salesman.SalesmanId = orders.SalesmanId

CREATE TABLE LOCATIONS (
  Location_ID INT PRIMARY KEY,
  City VARCHAR(50)
);
INSERT INTO LOCATIONS (Location_ID, City)
VALUES (122, 'New York'),
       (123, 'Dallas'),
       (124, 'Chicago'),
       (167, 'Boston');

	    CREATE TABLE DEPARTMENT (
  Department_Id INT PRIMARY KEY,
  Name VARCHAR(50),
  Location_Id INT,
  FOREIGN KEY (Location_Id) REFERENCES LOCATIONS(Location_ID)
);
INSERT INTO DEPARTMENT (Department_Id, Name, Location_Id)
VALUES (10, 'Accounting', 122),
       (20, 'Sales', 124),
       (30, 'Research', 123),
       (40, 'Operations', 167);

	    CREATE TABLE JOB (
  Job_ID INT PRIMARY KEY,
  Designation VARCHAR(50)
);
INSERT  INTO JOB VALUES
(667, 'CLERK'),
(668,'STAFF'),
(669,'ANALYST'),
(670,'SALES_PERSON'),
(671,'MANAGER'),
(672, 'PRESIDENT')
CREATE TABLE EMPLOYEES
(EMPLOYEE_ID INT,
LAST_NAME VARCHAR(20),
FIRST_NAME VARCHAR(20),
MIDDLE_NAME CHAR(1),
JOB_ID INT FOREIGN KEY
REFERENCES JOB(JOB_ID),
MANAGER_ID INT,
HIRE_DATE DATE,
SALARY INT,
COMM INT,
DEPARTMENT_ID  INT FOREIGN KEY
REFERENCES DEPARTMENT(DEPARTMENT_ID))

INSERT INTO EMPLOYEES VALUES
(7369,'SMITH','JOHN','Q',667,7902,'17-DEC-84',800,NULL,20),
(7499,'ALLEN','KEVIN','J',670,7698,'20-FEB-84',1600,300,30),
(7505,'DOYLE','JEAN','K',671,7839,'04-APR-85',2850,NULl,30),
(7506,'DENNIS','LYNN','S',671,7839,'15-MAY-85',2750,NULL,30),
(7507,'BAKER','LESLIE','D',671,7839,'10-JUN-85',2200,NULL,40),
(7521,'WARK','CYNTHIA','D',670,7698,'22-FEB-85',1250,500,30)

--Q1. List all the employee details. 
select * from EMPLOYEES
--Q2. List all the department details.
select * from department
--Q3. List all job details.
select * from job
--Q4. List all the locations. 
select * from locations
--Q5. List out the First Name, Last Name, Salary, Commission for allEmployees.
select first_name,last_name,salary,comm from employees
--Q6. List out the Employee ID, Last Name, Department ID for all employees and alias Employee ID as "ID of the Employee", Last Name as "Name of theEmployee", Department ID as "Dep_id".
select employee_ID as 'ID of the Employee',
last_name as 'Name of the Employee',
department_id as 'Dep_id'
from employees
--Q7. List out the annual salary of the employees with their names only.
select concat(first_name,' ',middle_name,' ',last_name)as 'Name',salary from employees

--Where Condition
--Q1. List the details about "Smith".
select * from employees where last_name = 'SMITH'
--Q2. List out the employees who are working in department 20.
select * from employees where department_id = 20
--Q3. List out the employees who are earning salaries between 3000and4500.
select * from employees where salary between 3000 and 4500
--Q4. List out the employees who are working in department 10 or 20. 
select * from employees where department_id = 10 or department_id = 20
--Q5. Find out the employees who are not working in department 10 or 30.
select * from employees where department_id not in (10,30)
--Q6. List out the employees whose name starts with 'S'.
select * from employees where first_name like 'S%'
--Q7. List out the employees whose name starts with 'S' and ends with'H'.
select * from employees where first_name like 'S%' and last_name like '%H'
--Q8. List out the employees whose name length is 4 and start with 'S'.
select * from employees where first_name = 'S%' and len(first_name) = 4
--Q9. List out employees who are working in department 10 and draw salaries more than 3500. 
select * from employees where department_id = 10 and salary > 3500
--Q10. List out the employees who are not receiving commission.
select * from employees where comm  is not null

--Order by Clause
--Q1.List out the Employee ID and Last Name in ascending order based on the Employee ID.
select employee_id,last_name from employees order by employee_id asc
--Q2.List out the Employee ID and Name in descending order based onsalary
select employee_id,last_name from employees order by salary desc
--Q3.List out the employee details according to their Last Name in ascending-order.
select * from employees order by last_name asc
--Q4.List out the employee details according to their Last Name in ascending order and then Department ID in descending order.
select * from employees order by last_name asc 
, department_id desc

--Group By and Having Clause
--Q1.How many employees are in different departments in the organization?
select count(*) from employees
group by DEPARTMENT_ID
having count(department_Id) = 1
--Q2.. List out the department wise maximum salary, minimum salary and average salary of the employees.
select department_id , max(salary) as 'maximum salary',min(salary) as 'minimum salary',avg(salary)  as 'average salary' from employees group by DEPARTMENT_ID
--Q3.List out the job wise maximum salary, minimum salary and averagesalary of the employees
select JOB_ID , max(salary) as 'maximum salary',min(salary) as 'minimum salary',avg(salary)  as 'average salary' from employees group by JOB_ID
--Q4.List out the number of employees who joined each month in ascending order
select count(employee_id) ,month(hire_date) from employees group by month(hire_date) order by month(hire_date) asc
--Q5.List out the number of employees for each month and year in ascending order based on the year and month
select count(employee_id) ,month(hire_date) from employees group by month(hire_date)
select count(employee_id),year(hire_date) from employees group by year(hire_date)
--Q6.List out the Department ID having at least four employees.
select DEPARTMENT_ID from employees group by department_id having count(department_id) >= 4
--Q7.How many employees joined in the month of January?
select count(employee_id) from employees group by month(hire_date) having month(hire_date) = 1
--Q8.. How many employees joined in the month of January or September?
select count(employee_id) from employees group by month(hire_date) having month(hire_date) = 1 or month(hire_date) = 9
--Q9.How many employees joined in 1985?
select count(employee_id) from employees group by year(hire_date) having year(hire_date) = 1985
--Q10. How many employees joined each month in 1985?
select month(hire_date), count(employee_id) from employees group by month(hire_date),year(hire_date) having year(hire_date) = 1985
--Q11. How many employees joined in March 1985?
select count(employee_id) from employees group by month(hire_date),year(hire_date) having month(hire_date) = 3 and year(hire_date) = 1985

--Q12. Which is the Department ID having greater than or equal to 3 employees joining in April 1985?
select DEPARTMENT_ID from employees group by month(hire_date),year(hire_date),department_id having month(hire_date) = 4 and year(hire_date) = 1985 and count(DEPARTMENT_ID) >= 3
--Joins:
select * from EMPLOYEES

select * from department

select * from job
 
select * from locations
--Q1. List out employees with their department names. 
select E.Employee_id,
E.Last_name,
E.first_name,
E.middle_name,
D.Name
from employees E
left join DEPARTMENT D on E.department_id = D.department_id
--Q2. Display employees with their designations.
select E.Employee_id,
E.Last_name,
E.first_name,
E.middle_name,
J.Designation
from employees E
left join Job J on E.JOB_ID = J.Job_ID
--Q3. Display the employees with their department names and regional groups.
select E.Employee_id,
E.Last_name,
E.first_name,
E.middle_name,
D.Name,
L.City
from employees E
inner join department D on E.Department_Id = D.Department_Id
inner join Location L on D.Location_id = L.Location_Id
--Q4. How many employees are working in different departments? Display with department names.
select count(E.Employee_id),
D.Name
from employees E
inner join department D on E.Department_Id = D.Department_Id
group by
D.Name
having count( D.Name) = 1
--Q5. How many employees are working in the sales department?
select count(E.Employee_id),
D.Name
from employees E
inner join department D on E.Department_Id = D.Department_Id
group by
D.Name
having  D.Name = 'Sales'
--Q6. Which is the department having greater than or equal to 5employees? Display the department names in ascending order.
select count(E.Employee_id),
D.Name
from employees E
inner join department D on E.Department_Id = D.Department_Id
group by
D.Name
having  count(D.Name) >= 5
order by D.Name asc
--Q7. How many jobs are there in the organization? Display with designations.
select count(E.Employee_id),
J.Designation
from employees E
inner join Job J on E.JOB_ID = J.Job_ID
group by
J.Designation

--Q8. How many employees are working in "New York"?
select count(Employee_ID),
T.City
from employees E
left join
(select D.Department_ID,
L.City
from Department D
left join Locations L on D.Location_ID = L.Location_Id) T on T.Department_ID = E.Department_ID
group by (T.City)
having T.City = 'New York'

--Q9. Display the employee details with salary grades. Use conditional statement to create a grade column.
select Employee_Id ,
last_name,
first_name,
salary,
case 
when salary > 2000 then 'A'
when salary > 1000 then 'B'
when salary > 500 then 'C'
else 'D'
end as 'Grades'
from employees

--Q10. List out the number of employees grade wise. Use conditional statement to create a grade column. 
select count( Employee_Id) 
from employees

group by ( select case 
when salary > 2000 then 'A'
when salary > 1000 then 'B'
when salary > 500 then 'C'
else 'D'
end as 'Grades' from employees)



--Q11.Display the employee salary grades and the number of employees between 2000 to 5000 range of salary. 

--Q12. Display all employees in sales or operation departments.
select E.* ,D.name from Employees E
left JOIN Department D on E.Department_ID = D.department_id
where D.Name = 'Sales' or D.name = 'Operations'

--SET Operators:
--Q1. List out the distinct jobs in sales and accounting departments.
select * from job
select * from employees
select * from department
select * from locations
select * ,
Job.Designation ,
Department.name
from employees
inner join Department on Department.department_id = employees.department_id
inner join job on job.job_id = employees.job_id
where department.name = 'Sales'
UNION 
select * ,
Job.Designation ,
Department.name
from employees
inner join Department on Department.department_id = employees.department_id
inner join job on job.job_id = employees.job_id
where department.name = 'Accounting'
--Q2. List out all the jobs in sales and accounting departments.
select * ,
Job.Designation ,
Department.name
from employees
inner join Department on Department.department_id = employees.department_id
inner join job on job.job_id = employees.job_id
where department.name = 'Sales'
UNION ALL
select * ,
Job.Designation ,
Department.name
from employees
inner join Department on Department.department_id = employees.department_id
inner join job on job.job_id = employees.job_id
where department.name = 'Accounting'
--Q3. List out the common jobs in research and accounting departments in ascending order
select * ,
Job.Designation ,
Department.name
from employees
inner join Department on Department.department_id = employees.department_id
inner join job on job.job_id = employees.job_id
where department.name = 'Research'
intersect
select * ,
Job.Designation ,
Department.name
from employees
inner join Department on Department.department_id = employees.department_id
inner join job on job.job_id = employees.job_id
where department.name = 'Accounting'   
--Subqueries:
--Q1. Display the employees list who got the maximum salary.
select * from employees where salary =  (select max(salary) from employees )
--Q2.Display the employees who are working in the sales department.
select * from employees E where DEPARTMENT_ID = (select DEPARTMENT_ID from department where DEPARTMENT_ID = 20) 
--Q3.Display the employees who are working as 'Clerk'
select * from employees where JOB_ID = (select job_id from job where Designation = 'CLERK')
--Q4. Display the list of employees who are living in "New York".
select * from employees where DEPARTMENT_ID = 
(select department_id from department where location_id =
(select location_id from LOCATIONS where city = 'New York'))

--Q5.Find out the number of employees working in the sales department.
select * from employees where department_Id =
(select department_id from department where name = 'Sales' )
--Q6.Update the salaries of employees who are working as clerks on the basis of 10%.
update employees set SALARY = (salary +( salary * 10/100))
where job_id = (select Job_id from job where Designation = 'CLERK')
--Q7.Delete the employees who are working in the accounting department.
delete from employees 
where department_id = (select department_id from department where name = 'Accounting')
--Q8.Display the second highest salary drawing employee details.
select top(1) from employees where 
salary < (select max(salary) from employees )
--Q9.Display the nth highest salary drawing employee details.
SELECT * FROM (
  SELECT  *, DENSE_RANK() OVER (ORDER BY salary DESC) AS r
  FROM employees
) AS subquery
WHERE r = 2
--Q10.List out the employees who earn more than every employee in department 30.
select * from employees where  department_id = 30 and salary = (select max(salary) from employees)
--Q11.List out the employees who earn more than the lowest salary in department.Find out whose department has no employees.
select * from employees where salary > (select min(salary) from employees)
--Q12.Find out which department has no employees.
select * from employees
select * from department
select * from job
select * from locations

select department_id from department where department_id not in (select department_id from employees)
--Q13. Find out the employees who earn greater than the average salary for their department.
select department_id,avg(salary) from employees group by department_id 
select * from employees 
where salary > (select avg(salary) from employees  )
